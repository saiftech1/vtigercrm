<?xml version='1.0'?>
<schema>
	<tables>
		<table>
			<name>vtiger_resolution</name>
			<sql><![CDATA[CREATE TABLE `vtiger_resolution` (`resolutionid` int(11) NOT NULL, `resolutionno` varchar(100) default NULL, `resolution_tks_resolution` BIGINT(255) default NULL ,`resolution_tks_prefix` varchar(4) default NULL ,`resolution_tks_serial` BIGINT(255) default NULL ,`resolution_tks_from` int(11) default NULL ,`resolution_tks_to` int(11) default NULL ,`resolution_tks_expedition` date default NULL ,`resolution_tks_validity` int(3) default NULL ,`resolution_tks_type` varchar(100) default NULL   , PRIMARY KEY (`resolutionid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8]]></sql>
		</table>
		<table>
			<name>vtiger_resolutioncf</name>
			<sql><![CDATA[CREATE TABLE `vtiger_resolutioncf` (`resolutionid` int(11) NOT NULL, PRIMARY KEY (`resolutionid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8]]></sql>
		</table>
		<table>
			<name>vtiger_resolution_user_field</name>
			<sql><![CDATA[CREATE TABLE `vtiger_resolution_user_field` (`recordid` int(25) NOT NULL, `userid` int(25) NOT NULL, `starred` varchar(100) default NULL , KEY (`vtiger_resolution_user_field`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8]]></sql>
		</table>
		<table>
			<name>get_serial_resolution</name>
			<sql><![CDATA[
      CREATE FUNCTION `get_serial_resolution`(
  resolution bigint,
  prefix Varchar(4),
  restype Varchar(100)
) RETURNS int(11) BEGIN
SET
  @key = (
    SELECT
      (`resolution_tks_serial` + 1)
    FROM `vtiger_resolution`
    WHERE
      `resolution_tks_prefix` = prefix
      AND `resolution_tks_resolution` = resolution
      AND `resolution_tks_type` = restype
      AND DATE_ADD(
        `resolution_tks_expedition`,
        INTERVAL `resolution_tks_validity` MONTH
      ) >= date(NOW())
  );
RETURN @key;
END
      ]]></sql>
		</table>
		<table>
			<name>serial_resolution</name>
			<sql><![CDATA[
CREATE FUNCTION `serial_resolution`(
  resolution bigint,
  prefix Varchar(4),
  restype Varchar(100)
) RETURNS int(11) BEGIN
SET
  @key = (
    SELECT
      (`resolution_tks_serial` + 1)
    FROM `vtiger_resolution`
    WHERE
      `resolution_tks_prefix` = prefix
      AND `resolution_tks_resolution` = resolution
      AND `resolution_tks_type` = restype
      AND DATE_ADD(
        `resolution_tks_expedition`,
        INTERVAL `resolution_tks_validity` MONTH
      ) >= date(NOW())
  );
SET
  SQL_SAFE_UPDATES = 0;
UPDATE `vtiger_resolution`
SET
  resolution_tks_serial = @key
WHERE
  `resolution_tks_prefix` = prefix
  AND `resolution_tks_resolution` = resolution
  AND `resolution_tks_serial` <= `resolution_tks_to`
  AND `resolution_tks_type` = restype
  AND DATE_ADD(
    `resolution_tks_expedition`,
    INTERVAL `resolution_tks_validity` MONTH
  ) >= date(NOW());
RETURN @key;
END
            ]]></sql>
		</table>
		<table>
			<name>vtiger_view_resolution</name>
			<sql><![CDATA[
CREATE VIEW `vtiger_view_resolution` AS
SELECT
  `vtiger_resolution`.`resolutionid` AS `resolutionid`,
  `vtiger_resolution`.`resolutionno` AS `resolutionno`,
  `vtiger_resolution`.`resolution_tks_resolution` AS `resolution_tks_resolution`,
  `vtiger_resolution`.`resolution_tks_prefix` AS `resolution_tks_prefix`,
  `vtiger_resolution`.`resolution_tks_serial` AS `resolution_tks_serial`,
  `vtiger_resolution`.`resolution_tks_from` AS `resolution_tks_from`,
  `vtiger_resolution`.`resolution_tks_to` AS `resolution_tks_to`,
  `vtiger_resolution`.`resolution_tks_expedition` AS `resolution_tks_expedition`,
  `vtiger_resolution`.`resolution_tks_validity` AS `resolution_tks_validity`,
  `vtiger_resolution`.`resolution_tks_type` AS `resolution_tks_type`,
  `vtiger_resolution`.`tags` AS `tags`
FROM `vtiger_resolution`
WHERE
  `vtiger_resolution`.`resolution_tks_serial` <= `vtiger_resolution`.`resolution_tks_to`
  AND `vtiger_resolution`.`resolution_tks_expedition` + INTERVAL `vtiger_resolution`.`resolution_tks_validity` MONTH >= CAST(CURRENT_TIMESTAMP() AS DATE)
      ]]></sql>
		</table>
	</tables>
</schema>
